name: Android Build

on:
  push:
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Create .env file
        run: |
          cat > .env << EOF
          YOUR_API_KEY=${{ secrets.YOUR_API_KEY }}
          YOUR_AUTH_DOMAIN=${{ secrets.YOUR_AUTH_DOMAIN }}
          YOUR_PROJECT_ID=${{ secrets.YOUR_PROJECT_ID }}
          YOUR_STORAGE_BUCKET=${{ secrets.YOUR_STORAGE_BUCKET }}
          YOUR_MESSAGING_SENDER_ID=${{ secrets.YOUR_MESSAGING_SENDER_ID }}
          YOUR_APP_ID=${{ secrets.YOUR_APP_ID }}
          EOF

      - name: Setup Google Services
        run: |
          mkdir -p android/app
          cat > android/app/google-services.json << EOF
          {
            "project_info": {
              "project_number": "${{ secrets.FIREBASE_PROJECT_NUMBER }}",
              "project_id": "${{ secrets.FIREBASE_PROJECT_ID }}",
              "storage_bucket": "${{ secrets.FIREBASE_STORAGE_BUCKET }}"
            },
            "client": [
              {
                "client_info": {
                  "mobilesdk_app_id": "${{ secrets.FIREBASE_MOBILE_SDK_APP_ID }}",
                  "android_client_info": {
                    "package_name": "com.awesomeproject"
                  }
                },
                "oauth_client": [],
                "api_key": [
                  {
                    "current_key": "${{ secrets.FIREBASE_API_KEY }}"
                  }
                ],
                "services": {
                  "appinvite_service": {
                    "other_platform_oauth_client": []
                  }
                }
              }
            ],
            "configuration_version": "1"
          }
          EOF

      - name: Install Dependencies
        run: npm ci

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      - name: Make Gradlew Executable
        run: chmod +x ./android/gradlew

      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon

      - name: Build Release APK
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Build Release Bundle (AAB)
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: android/app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Release APK
        uses: actions/upload-artifact@v3
        with:
          name: app-release
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk

      - name: Upload Release Bundle
        uses: actions/upload-artifact@v3
        with:
          name: app-release-bundle
          path: android/app/build/outputs/bundle/release/app-release.aab
